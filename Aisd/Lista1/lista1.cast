{"version": 2, "width": 100, "height": 40, "timestamp": 1678747977, "idle_time_limit": 0.2, "env": {"SHELL": "/bin/bash", "TERM": "xterm-256color"}}
[0.020184, "o", "\u001b]0;weronika@wera-VirtualBox: ~/Pulpit/aisd\u0007\u001b[01;32mweronika@wera-VirtualBox\u001b[00m:\u001b[01;34m~/Pulpit/aisd\u001b[00m$ "]
[0.603445, "o", "exit"]
[0.839396, "o", "\b\b\b\b# Weronika Chmiela 268494 Kurs aisd lista1"]
[1.658265, "o", "\r\n"]
[1.6584, "o", "\u001b]0;weronika@wera-VirtualBox: ~/Pulpit/aisd\u0007\u001b[01;32mweronika@wera-VirtualBox\u001b[00m:\u001b[01;34m~/Pulpit/aisd\u001b[00m$ "]
[11.475378, "o", "svn export https://repo.cs.pwr.edu.pl/mk1-268494/Lista1/"]
[12.494209, "o", "\r\n"]
[12.657433, "o", "A    Lista1\r\n"]
[12.688556, "o", "A    Lista1/zad1fifo.c\r\n"]
[12.691488, "o", "A    Lista1/zad1lifo.c\r\n"]
[12.753699, "o", "A    Lista1/zad2.c\r\n"]
[12.753766, "o", "A    Lista1/zad3.c\r\n"]
[12.753923, "o", "Wyeksportowano wersję 2.\r\n"]
[12.755739, "o", "\u001b]0;weronika@wera-VirtualBox: ~/Pulpit/aisd\u0007\u001b[01;32mweronika@wera-VirtualBox\u001b[00m:\u001b[01;34m~/Pulpit/aisd\u001b[00m$ "]
[16.882127, "o", "c"]
[17.056436, "o", "d"]
[17.278256, "o", " "]
[17.640303, "o", "L"]
[17.880233, "o", "i"]
[18.016159, "o", "s"]
[18.232182, "o", "t"]
[18.378205, "o", "a"]
[19.002007, "o", "1"]
[19.946165, "o", "\r\n"]
[19.946327, "o", "\u001b]0;weronika@wera-VirtualBox: ~/Pulpit/aisd/Lista1\u0007\u001b[01;32mweronika@wera-VirtualBox\u001b[00m:\u001b[01;34m~/Pulpit/aisd/Lista1\u001b[00m$ "]
[29.656391, "o", "# Zadanie 1 fifo"]
[30.25824, "o", "\r\n"]
[30.258476, "o", "\u001b]0;weronika@wera-VirtualBox: ~/Pulpit/aisd/Lista1\u0007\u001b[01;32mweronika@wera-VirtualBox\u001b[00m:\u001b[01;34m~/Pulpit/aisd/Lista1\u001b[00m$ "]
[35.20038, "o", "cat zad1fifo.c"]
[36.146423, "o", "\r\n"]
[36.146938, "o", "//zad 1 FIFO (first in first out)\r\n#include <stdio.h>\r\n#include <stdlib.h> //malloc\r\n\r\ntypedef struct QueueElement{\r\n\tint number;\r\n\tstruct QueueElement* next; //(zeby nie bylo nieskonczonej ilosci pol), ograniczamy się do adresu nastepnego el.\r\n} queueel;\r\n\r\ntypedef struct QueueFifo{\t//struktura, żeby można stworzyc kilka kolejek\r\n\tqueueel* first;\r\n\tqueueel* last;\r\n} queue;\r\n\r\nvoid startingQ(queue* temp){\r\n\ttemp->first = temp->last = NULL; //puste\r\n}\r\n\r\n//dodaje nowy element na koniec struktury\r\nvoid add(queue* all, int value){\r\n\tqueueel* end = malloc(sizeof(queueel)); //zapisuje na stercie\r\n\tif(end == NULL){\r\n\t\tprintf(\"blad malloc\");\r\n\t\treturn;\t\t\t\t\t\t//zmien\r\n\t}\r\n\t\r\n\tend->number = value;\r\n\tend->next = NULL;\r\n\t\r\n\t//jesli nie ma jeszcze nic\r\n\tif(all->last == NULL){\r\n\t\tall->first = end;\r\n\t}\r\n\telse{\r\n\t\tall->last->next = end;\r\n\t}\r\n\tall->last = end;\r\n\t\r\n\tprintf(\"Dodano: %d \\n\", value); \r\n}\r\n\r\n//usuwa najstarszy element listy\r\nvoid del(queue* all){\r\n\tqueueel* tmp = all->first;\r\n\t\r\n\tif(tmp == NULL){\r\n\t\tprintf(\"Pus"]
[36.146982, "o", "to, nie można nic usunąć \\n\");\r\n\t\treturn;\r\n\t}\r\n\tif(tmp->next == NULL){\t//to byl ostatni element\r\n\t\tall->last = NULL; \r\n\t}\r\n\tall->first = tmp->next;\r\n\t\r\n\tprintf(\"Usunieto: %d \\n\", tmp->number); \r\n\tfree(tmp); //zwalnia to co malloc'iem\r\n}\r\n\r\nint main()\r\n{\r\n\tqueue* q = malloc(sizeof(queue));\r\n\tstartingQ(q);\r\n\t\r\n\tfor(int i=0; i<100; i++){\r\n\t\tadd(q, i);\r\n\t}\r\n\t\r\n\tfor(int i=0; i<100; i++){\r\n\t\tdel(q);\r\n\t}\t\r\n\t\r\n\treturn 0;\r\n}\r\n"]
[36.147169, "o", "\u001b]0;weronika@wera-VirtualBox: ~/Pulpit/aisd/Lista1\u0007\u001b[01;32mweronika@wera-VirtualBox\u001b[00m:\u001b[01;34m~/Pulpit/aisd/Lista1\u001b[00m$ "]
[38.262263, "o", "c"]
[38.512256, "o", "l"]
[38.610125, "o", "a"]
[38.780171, "o", "n"]
[38.93236, "o", "g"]
[39.094182, "o", " "]
[40.332008, "o", "z"]
[40.506196, "o", "a"]
[40.652167, "o", "d"]
[41.030405, "o", "1"]
[41.636105, "o", "f"]
[41.800171, "o", "i"]
[41.998166, "o", "f"]
[42.246184, "o", "o"]
[42.858076, "o", "."]
[43.316108, "o", "c"]
[45.174292, "o", "\r\n"]
[45.227943, "o", "\u001b]0;weronika@wera-VirtualBox: ~/Pulpit/aisd/Lista1\u0007\u001b[01;32mweronika@wera-VirtualBox\u001b[00m:\u001b[01;34m~/Pulpit/aisd/Lista1\u001b[00m$ "]
[46.712193, "o", "."]
[46.872307, "o", "/"]
[47.540407, "o", "a"]
[48.026039, "o", "."]
[48.248186, "o", "o"]
[48.454171, "o", "u"]
[48.67037, "o", "t"]
[49.110144, "o", "\r\n"]
[49.110853, "o", "Dodano: 0 \r\nDodano: 1 \r\nDodano: 2 \r\nDodano: 3 \r\nDodano: 4 \r\nDodano: 5 \r\nDodano: 6 \r\nDodano: 7 \r\nDodano: 8 \r\nDodano: 9 \r\nDodano: 10 \r\nDodano: 11 \r\nDodano: 12 \r\nDodano: 13 \r\nDodano: 14 \r\nDodano: 15 \r\nDodano: 16 \r\nDodano: 17 \r\nDodano: 18 \r\nDodano: 19 \r\nDodano: 20 \r\nDodano: 21 \r\nDodano: 22 \r\nDodano: 23 \r\nDodano: 24 \r\nDodano: 25 \r\nDodano: 26 \r\nDodano: 27 \r\nDodano: 28 \r\nDodano: 29 \r\nDodano: 30 \r\nDodano: 31 \r\nDodano: 32 \r\nDodano: 33 \r\nDodano: 34 \r\nDodano: 35 \r\nDodano: 36 \r\nDodano: 37 \r\nDodano: 38 \r\nDodano: 39 \r\nDodano: 40 \r\nDodano: 41 \r\nDodano: 42 \r\nDodano: 43 \r\nDodano: 44 \r\nDodano: 45 \r\nDodano: 46 \r\nDodano: 47 \r\nDodano: 48 \r\nDodano: 49 \r\nDodano: 50 \r\nDodano: 51 \r\nDodano: 52 \r\nDodano: 53 \r\nDodano: 54 \r\nDodano: 55 \r\nDodano: 56 \r\nDodano: 57 \r\nDodano: 58 \r\nDodano: 59 \r\nDodano: 60 \r\nDodano: 61 \r\nDodano: 62 \r\nDodano: 63 \r\nDodano: 64 \r\n"]
[49.11089, "o", "Dodano: 65 \r\nDodano: 66 \r\nDodano: 67 \r\nDodano: 68 \r\nDodano: 69 \r\nDodano: 70 \r\nDodano: 71 \r\nDodano: 72 \r\nDodano: 73 \r\nDodano: 74 \r\nDodano: 75 \r\nDodano: 76 \r\nDodano: 77 \r\nDodano: 78 \r\nDodano: 79 \r\nDodano: 80 \r\nDodano: 81 \r\nDodano: 82 \r\nDodano: 83 \r\nDodano: 84 \r\nDodano: 85 \r\nDodano: 86 \r\nDodano: 87 \r\nDodano: 88 \r\nDodano: 89 \r\nDodano: 90 \r\nDodano: 91 \r\nDodano: 92 \r\nDodano: 93 \r\nDodano: 94 \r\nDodano: 95 \r\nDodano: 96 \r\nDodano: 97 \r\nDodano: 98 \r\nDodano: 99 \r\nUsunieto: 0 \r\nUsunieto: 1 \r\nUsunieto: 2 \r\n"]
[49.110916, "o", "Usunieto: 3 \r\nUsunieto: 4 \r\nUsunieto: 5 \r\nUsunieto: 6 \r\nUsunieto: 7 \r\nUsunieto: 8 \r\nUsunieto: 9 \r\nUsunieto: 10 \r\nUsunieto: 11 \r\nUsunieto: 12 \r\nUsunieto: 13 \r\nUsunieto: 14 \r\nUsunieto: 15 \r\nUsunieto: 16 \r\nUsunieto: 17 \r\nUsunieto: 18 \r\nUsunieto: 19 \r\nUsunieto: 20 \r\nUsunieto: 21 \r\nUsunieto: 22 \r\nUsunieto: 23 \r\nUsunieto: 24 \r\nUsunieto: 25 \r\nUsunieto: 26 \r\nUsunieto: 27 \r\nUsunieto: 28 \r\nUsunieto: 29 \r\n"]
[49.111033, "o", "Usunieto: 30 \r\nUsunieto: 31 \r\nUsunieto: 32 \r\nUsunieto: 33 \r\nUsunieto: 34 \r\nUsunieto: 35 \r\nUsunieto: 36 \r\nUsunieto: 37 \r\nUsunieto: 38 \r\nUsunieto: 39 \r\nUsunieto: 40 \r\nUsunieto: 41 \r\nUsunieto: 42 \r\nUsunieto: 43 \r\nUsunieto: 44 \r\nUsunieto: 45 \r\nUsunieto: 46 \r\nUsunieto: 47 \r\nUsunieto: 48 \r\nUsunieto: 49 \r\nUsunieto: 50 \r\nUsunieto: 51 \r\nUsunieto: 52 \r\nUsunieto: 53 \r\nUsunieto: 54 \r\nUsunieto: 55 \r\nUsunieto: 56 \r\nUsunieto: 57 \r\nUsunieto: 58 \r\nUsunieto: 59 \r\nUsunieto: 60 \r\nUsunieto: 61 \r\nUsunieto: 62 \r\nUsunieto: 63 \r\nUsunieto: 64 \r\nUsunieto: 65 \r\nUsunieto: 66 \r\nUsunieto: 67 \r\nUsunieto: 68 \r\nUsunieto: 69 \r\nUsunieto: 70 \r\nUsunieto: 71 \r\nUsunieto: 72 \r\nUsunieto: 73 \r\nUsunieto: 74 \r\nUsunieto: 75 \r\nUsunieto: 76 \r\nUsunieto: 77 \r\nUsunieto: 78 \r\nUsunieto: 79 \r\nUsunieto: 80 \r\nUsunieto: 81 \r\nUsunieto: 82 \r\nUsunieto: 83 \r\nUsunieto: 84 \r\nUsunieto: 85 \r\nUsunieto: 86 \r\nUsunieto: 87 \r\nUsunieto: 88 \r\nUsunieto: 89 \r\nUsunieto: 90 \r\nUsunieto: 91 \r\nUsunieto: 92 \r\nUsunieto: 93 \r\nUsunieto: 94 \r\nUsunieto: 95 \r\nUsunieto: 96 \r\nUsunieto: 97 \r\nUsun"]
[49.11108, "o", "ieto: 98 \r\nUsunieto: 99 \r\n"]
[49.111197, "o", "\u001b]0;weronika@wera-VirtualBox: ~/Pulpit/aisd/Lista1\u0007\u001b[01;32mweronika@wera-VirtualBox\u001b[00m:\u001b[01;34m~/Pulpit/aisd/Lista1\u001b[00m$ "]
[52.507437, "o", "./a.out"]
[52.683408, "o", "\b\b\b\b\b\b\bclang zad1fifo.c"]
[53.409357, "o", "\b"]
[53.567122, "o", "\b"]
[53.714792, "o", "\b"]
[53.863628, "o", "\b"]
[53.999046, "o", "\b"]
[54.486178, "o", "\b\u001b[1Pifo.c\b\b\b\b\b"]
[54.684103, "o", "lifo.c\b\b\b\b\b"]
[55.570159, "o", "\r\n"]
[55.625428, "o", "\u001b]0;weronika@wera-VirtualBox: ~/Pulpit/aisd/Lista1\u0007\u001b[01;32mweronika@wera-VirtualBox\u001b[00m:\u001b[01;34m~/Pulpit/aisd/Lista1\u001b[00m$ "]
[59.615246, "o", "clang zad1lifo.c"]
[59.823331, "o", "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\u001b[9P./a.out"]
[60.307336, "o", "\b\b\b\b\b\b\bclang zad1fifo.c"]
[60.817244, "o", "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\u001b[2Pat\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C"]
[61.289098, "o", "\b\b\b\b\b\b\b\b\b\b\b\b\b\b# Zadanie 1 fifo"]
[62.00313, "o", "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\u001b[7Pcd Lista1"]
[62.711756, "o", "\b\b\b\b\b\b\b\b\b# Zadanie 1 fifo"]
[62.857259, "o", "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\u001b[2Pcat zad1fifo.c"]
[63.063306, "o", "\b\b\b\b\b\b\b\b\b\b\b\b\b\u001b[2@lang\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C"]
[63.249276, "o", "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\u001b[9P./a.out"]
[69.01625, "o", "\b\u001b[K"]
[69.516365, "o", "\b\u001b[K"]
[69.546441, "o", "\b\u001b[K"]
[69.579656, "o", "\b\u001b[K"]
[69.60999, "o", "\b\u001b[K"]
[69.641604, "o", "\b\u001b[K"]
[69.672544, "o", "\b\u001b[K"]
[69.702669, "o", "\u0007"]
[69.732444, "o", "\u0007"]
[69.763053, "o", "\u0007"]
[69.793161, "o", "\u0007"]
[69.82313, "o", "\u0007"]
[70.132138, "o", "v"]
[70.75209, "o", "\b\u001b[K"]
[71.084038, "o", "c"]
[71.174092, "o", "a"]
[71.480137, "o", "t"]
[71.65204, "o", " "]
[72.126131, "o", "z"]
[72.292108, "o", "a"]
[72.376147, "o", "d"]
[72.654175, "o", "1"]
[72.744172, "o", "1"]
[73.373886, "o", "\b\u001b[K"]
[74.196346, "o", "l"]
[74.37603, "o", "i"]
[74.516186, "o", "f"]
[74.60009, "o", "o"]
[75.022014, "o", "."]
[75.348231, "o", "c"]
[76.108492, "o", "\r\n"]
[76.109286, "o", "//zad 1  LIFO (last in first out)\r\n#include <stdio.h>\r\n#include <stdlib.h> //malloc\r\n\r\ntypedef struct QueueElement{\r\n\tint number;\r\n\tstruct QueueElement* next; //nastepny element\r\n} queueel;\r\n\r\ntypedef struct QueueLifo{\t//struktura, żeby można stworzyc kilka kolejek\r\n\tqueueel* first;\r\n\tqueueel* last;\r\n} stack;\r\n\r\nvoid starting(stack* temp){\t\r\n\ttemp->first = temp->last = NULL; //puste\r\n}\r\n\r\n//dodaje nowy element na koniec struktury\r\nvoid add(stack* all, int value){\r\n\tqueueel* end = malloc(sizeof(queueel)); //zapisuje na stercie\r\n\tif(end == NULL){\r\n\t\tprintf(\"blad malloc\");\r\n\t\treturn;\r\n\t}\r\n\t\r\n\tend->number = value;\r\n\tend->next = NULL;\r\n\t\r\n\t//jesli nie ma jeszcze nic\r\n\tif(all->last == NULL){\r\n\t\tall->first = end;\r\n\t}\r\n\telse{\r\n\t\tall->last->next = end;\r\n\t}\r\n\tall->last = end;\r\n\t\r\n\tprintf(\"Dodano: %d \\n\", value); \r\n}\r\n\r\n//usuwa najmlodszy element listy\r\nvoid del(stack* all){\r\n\tqueueel* tmp = all->first;\r\n\t\r\n\tif(tmp == NULL){\r\n\t\tprintf(\"Pusto, nie można nic usunąć \\n\");\r\n\t\treturn;\r\n\t}\r\n\t//jesli jest to ostatni eleme"]
[76.109339, "o", "nt\r\n\tif(tmp->next == NULL){\r\n\t\tall->first = NULL; \r\n\t\tall->last = NULL;\r\n\t}\r\n\telse{\r\n\t\t//szukanie przed ostatniego\r\n\t\twhile(tmp->next->next != NULL){\r\n\t\t\ttmp = tmp->next;\r\n\t\t}\r\n\t\tall->last = tmp;\r\n\t\ttmp = tmp->next;\r\n\t\tall->last->next = NULL;\r\n\t}\r\n\t\r\n\tprintf(\"Usunieto: %d \\n\", tmp->number); \r\n\tfree(tmp);\r\n}\r\n\r\nint main()\r\n{\r\n\tstack* q = malloc(sizeof(stack));\r\n\tstarting(q);\r\n\t\r\n\tfor(int i=0; i<100; i++){\r\n\t\tadd(q, i);\r\n\t}\r\n\t\r\n\tfor(int i=0; i<100; i++){\r\n\t\tdel(q);\r\n\t}\t\r\n\t\r\n\treturn 0;\r\n}\r\n\r\n\r\n"]
[76.109478, "o", "\u001b]0;weronika@wera-VirtualBox: ~/Pulpit/aisd/Lista1\u0007\u001b[01;32mweronika@wera-VirtualBox\u001b[00m:\u001b[01;34m~/Pulpit/aisd/Lista1\u001b[00m$ "]
[77.293103, "o", "cat zad1lifo.c"]
[77.995466, "o", "\b\b\b\b\b\b\b\b\b\b\b\b\b\u001b[2@lang\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C"]
[78.163312, "o", "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\u001b[9P./a.out"]
[79.354092, "o", "\r\n"]
[79.354848, "o", "Dodano: 0 \r\nDodano: 1 \r\nDodano: 2 \r\nDodano: 3 \r\nDodano: 4 \r\nDodano: 5 \r\nDodano: 6 \r\nDodano: 7 \r\nDodano: 8 \r\nDodano: 9 \r\nDodano: 10 \r\nDodano: 11 \r\nDodano: 12 \r\nDodano: 13 \r\nDodano: 14 \r\nDodano: 15 \r\nDodano: 16 \r\nDodano: 17 \r\nDodano: 18 \r\nDodano: 19 \r\nDodano: 20 \r\nDodano: 21 \r\nDodano: 22 \r\nDodano: 23 \r\nDodano: 24 \r\nDodano: 25 \r\nDodano: 26 \r\nDodano: 27 \r\nDodano: 28 \r\nDodano: 29 \r\nDodano: 30 \r\nDodano: 31 \r\nDodano: 32 \r\nDodano: 33 \r\nDodano: 34 \r\nDodano: 35 \r\nDodano: 36 \r\nDodano: 37 \r\nDodano: 38 \r\nDodano: 39 \r\nDodano: 40 \r\nDodano: 41 \r\nDodano: 42 \r\nDodano: 43 \r\nDodano: 44 \r\nDodano: 45 \r\nDodano: 46 \r\nDodano: 47 \r\nDodano: 48 \r\nDodano: 49 \r\nDodano: 50 \r\nDodano: 51 \r\nDodano: 52 \r\nDodano: 53 \r\nDodano: 54 \r\nDodano: 55 \r\nDodano: 56 \r\nDodano: 57 \r\nDodano: 58 \r\nDodano: 59 \r\nDodano: 60 \r\nDodano: 61 \r\nDodano: 62 \r\nDodano: 63 \r\nDodano: 64 \r\nDodano: 65 \r\nDodano: 66 \r\nDodano: 67 \r\nDodano: 68 \r\nDodano: 69 \r\nDodano: 70 \r\nDodano: 71 \r\nDodano: 72 \r\n"]
[79.35496, "o", "Dodano: 73 \r\nDodano: 74 \r\nDodano: 75 \r\nDodano: 76 \r\nDodano: 77 \r\nDodano: 78 \r\nDodano: 79 \r\nDodano: 80 \r\nDodano: 81 \r\nDodano: 82 \r\nDodano: 83 \r\nDodano: 84 \r\nDodano: 85 \r\nDodano: 86 \r\nDodano: 87 \r\nDodano: 88 \r\nDodano: 89 \r\nDodano: 90 \r\nDodano: 91 \r\nDodano: 92 \r\nDodano: 93 \r\nDodano: 94 \r\nDodano: 95 \r\nDodano: 96 \r\nDodano: 97 \r\nDodano: 98 \r\nDodano: 99 \r\nUsunieto: 99 \r\nUsunieto: 98 \r\nUsunieto: 97 \r\nUsunieto: 96 \r\nUsunieto: 95 \r\nUsunieto: 94 \r\nUsunieto: 93 \r\nUsunieto: 92 \r\nUsunieto: 91 \r\nUsunieto: 90 \r\nUsunieto: 89 \r\nUsunieto: 88 \r\nUsunieto: 87 \r\nUsunieto: 86 \r\nUsunieto: 85 \r\nUsunieto: 84 \r\nUsunieto: 83 \r\nUsunieto: 82 \r\nUsunieto: 81 \r\nUsunieto: 80 \r\nUsunieto: 79 \r\nUsunieto: 78 \r\nUsunieto: 77 \r\nUsunieto: 76 \r\nUsunieto: 75 \r\nUsunieto: 74 \r\nUsunieto: 73 \r\nUsunieto: 72 \r\nUsunieto: 71 \r\nUsunieto: 70 \r\nUsunieto: 69 \r\nUsunieto: 68 \r\nUsunieto: 67 \r\nUsunieto: 66 \r\nUsunieto: 65 \r\nUsunieto: 64 \r\nUsunieto: 63 \r\nUsunieto: 62 \r\nUsunieto: 61 \r\nUsunieto: 60 \r\nUsunieto: 59 \r\nUsunieto: 58 \r\nUsunieto: 57 \r\nUsunieto: 56 \r\nUsunieto: 55 "]
[79.355011, "o", "\r\nUsunieto: 54 \r\nUsunieto: 53 \r\nUsunieto: 52 \r\nUsunieto: 51 \r\nUsunieto: 50 \r\nUsunieto: 49 \r\nUsunieto: 48 \r\nUsunieto: 47 \r\nUsunieto: 46 \r\nUsunieto: 45 \r\nUsunieto: 44 \r\nUsunieto: 43 \r\nUsunieto: 42 \r\nUsunieto: 41 \r\nUsunieto: 40 \r\nUsunieto: 39 \r\nUsunieto: 38 \r\nUsunieto: 37 \r\nUsunieto: 36 \r\nUsunieto: 35 \r\nUsunieto: 34 \r\nUsunieto: 33 \r\nUsunieto: 32 \r\nUsunieto: 31 \r\nUsunieto: 30 \r\nUsunieto: 29 \r\nUsunieto: 28 \r\nUsunieto: 27 \r\nUsunieto: 26 \r\nUsunieto: 25 \r\nUsunieto: 24 \r\nUsunieto: 23 \r\nUsunieto: 22 \r\nUsunieto: 21 \r\nUsunieto: 20 \r\nUsunieto: 19 \r\nUsunieto: 18 \r\nUsunieto: 17 \r\nUsunieto: 16 \r\nUsunieto: 15 \r\nUsunieto: 14 \r\nUsunieto: 13 \r\nUsunieto: 12 \r\nUsunieto: 11 \r\nUsunieto: 10 \r\nUsunieto: 9 \r\nUsunieto: 8 \r\nUsunieto: 7 \r\nUsunieto: 6 \r\nUsunieto: 5 \r\nUsunieto: 4 \r\nUsunieto: 3 \r\nUsunieto: 2 \r\nUsunieto: 1 \r\nUsunieto: 0 \r\n"]
[79.355217, "o", "\u001b]0;weronika@wera-VirtualBox: ~/Pulpit/aisd/Lista1\u0007\u001b[01;32mweronika@wera-VirtualBox\u001b[00m:\u001b[01;34m~/Pulpit/aisd/Lista1\u001b[00m$ "]
[82.844002, "o", "#"]
[83.008319, "o", " "]
[83.314163, "o", "Z"]
[83.550132, "o", "a"]
[83.734111, "o", "d"]
[84.19622, "o", "2"]
[84.628601, "o", "\r\n"]
[84.628767, "o", "\u001b]0;weronika@wera-VirtualBox: ~/Pulpit/aisd/Lista1\u0007\u001b[01;32mweronika@wera-VirtualBox\u001b[00m:\u001b[01;34m~/Pulpit/aisd/Lista1\u001b[00m$ "]
[87.753132, "o", "# Zad2"]
[87.917095, "o", "\b\b\b\b\b\b./a.out"]
[88.379121, "o", "\b\b\b\b\b\b\bcat zad1lifo.c"]
[89.295152, "o", "\b"]
[89.491159, "o", "\b"]
[90.402147, "o", "\b\u001b[1P.c\b\b"]
[90.554158, "o", "\b\u001b[1P.c\b\b"]
[90.69235, "o", "\b\u001b[1P.c\b\b"]
[90.826111, "o", "\b\u001b[1P.c\b\b"]
[90.96025, "o", "\b\u001b[1P.c\b\b"]
[91.190283, "o", "2.c\b\b"]
[91.514195, "o", "\r\n"]
[91.51494, "o", "//lista jednokierunkowa\r\n#include <stdio.h>\r\n#include <stdlib.h> \r\n#include <time.h>\r\n\r\ntypedef struct Note{\r\n\tint head;\r\n\tstruct Note* tail;\r\n} note;\r\n\r\ntypedef struct List{\t//struktura, żeby można stworzyc kilka list\r\n\tnote* first;\r\n} list;\r\n\r\n\r\nvoid listCreate(list* lista){\r\n\tlista->first = NULL;\r\n}\r\n\r\n//dodaje na poczatek istniejacej listy\r\nvoid addstart(list* a, int newpart){\r\n\tnote* end = malloc(sizeof(struct Note));\r\n\t\r\n\tend->head = newpart;\r\n\tend->tail = a->first;\r\n\t\r\n\ta->first = end;\r\n\t\r\n\t//printf(\"Dodano na poczatek listy: %d \\n\", a->first->head);\r\n}\r\n\r\n//dodaje element na koniec listy\r\nvoid addend(list* a, int newpart){\r\n\tnote* end = malloc(sizeof(note));\r\n\t\r\n\tend->head = newpart;\r\n\tend->tail = NULL;\r\n\t\r\n\t//pusta lista\r\n\tif(a->first == NULL){\r\n\t\ta->first = end;\r\n\t}\r\n\telse{\r\n\t\tnote* tmp = a->first;\r\n\t\twhile(tmp->tail != NULL){\r\n\t\t\ttmp = tmp->tail;\r\n\t\t}\r\n\t\r\n\t\ttmp->tail = end;\r\n\t}\r\n\t//printf(\"Dodano na koniec listy: %d \\n\", end->head);\r\n}\r\n\r\n//wyswietla wszystkie elementy listy\r\nvoid showList(list* "]
[91.51509, "o", "a){\r\n\tif(a->first == NULL){\r\n\t\tprintf(\"Nie ma nic\");\r\n\t}\r\n\telse{\r\n\t\tnote* tmp = a->first;\r\n\t\tprintf(\"%d \", tmp->head);\r\n\t\twhile(tmp->tail != NULL) {\r\n\t\t\ttmp = tmp->tail;\r\n\t\t\tprintf(\"%d \", tmp->head);\r\n\t\t}\r\n\t}\r\n\tprintf(\"\\n\");\r\n}\r\n\r\n//usuwa ostatni element listy\r\nvoid del(list* all){\t\r\n\tnote* tmp = all->first;\r\n\t\t\r\n\tif(tmp == NULL){\r\n\t\tprintf(\"Pusto, nie można nic usunąć \\n\");\r\n\t\treturn;\r\n\t}\r\n\t//jesli jest to ostatni element\r\n\tif(tmp->tail == NULL){\r\n\t\tall->first = NULL;\r\n\t\t//printf(\"Usunieto: %d \\n\", tmp->head);\r\n\t}\r\n\telse{\r\n\t\t//szukanie przed ostatniego\r\n\t\twhile(tmp->tail->tail != NULL){\r\n\t\t\ttmp = tmp->tail;\r\n\t\t}\r\n\r\n\t\t//printf(\"Usunieto: %d \\n\", tmp->tail->head);\r\n\t\ttmp->tail = NULL;\r\n\t}\r\n}\r\n\r\n//łączy dwie listy\r\nvoid merge(list* l1, list* l2){\r\n\tnote* tmp = l1->first;\r\n\twhile(tmp->tail != NULL){\r\n\t\ttmp = tmp->tail;\r\n\t}\r\n\t\r\n\ttmp->tail = l2->first;\r\n\t\r\n\tprintf(\"Połączono listy \\n\");\r\n}\r\n\r\n//sprawdza sredni czas dostepu do podanego elemntu\r\nvoid averageTime(list* lista , int position){\r\n\tclock_t start, e"]
[91.515115, "o", "nd; //przechowuje liczbe cykli zegara;\r\n\tdouble execution_time = 0;\r\n\r\n\tfor(int j=0; j<100;j++){\r\n\t\tstart = clock(); //czas rozpoczecia\r\n\t\t\r\n\t\tnote* tmp = lista->first;\r\n\t\t//szuka elementu\r\n\t\tfor(int i=0; i< position;i++){\r\n\t\t\tif(tmp->tail == NULL){\r\n\t\t\t\tprintf(\"Koniec listy\");\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\ttmp = tmp->tail;\r\n\t\t}\r\n\t\t\r\n\t\tend = clock(); //czas zakonczenia\r\n\t\texecution_time += ((double)(end - start))/CLOCKS_PER_SEC;\r\n\t}\r\n\tprintf(\"Dla elementu %d: %f \\n\", position, execution_time/100);\r\n}\r\n\r\nint main() {\r\n\t//do losowosci\r\n\ttime_t ti;\r\n\tsrand((unsigned) time (&ti));\r\n\t\r\n\t//deklaracja listy\r\n\tlist* lista1 = malloc(sizeof(list));\r\n\tlistCreate(lista1);\r\n\t//wypelnienie listy losowymi liczbami (dla czytelnosci mniejszymi od 10000)\r\n\tfor(int i=0; i<10000;i++){\r\n\t\taddend(lista1, rand()%10000);\r\n\t}\r\n\t\r\n\tprintf(\"\\nSprawdzanie średniego czasu\\n\");\r\n\t\r\n\taverageTime(lista1, 100);\r\n\taverageTime(lista1, 9999);\r\n\taverageTime(lista1, rand()%10000);\r\n\t\r\n\tprintf(\"\\nSpawdzanie merge \\n\");\r\n\t\r\n\tlist* lista2 = malloc(sizeof("]
[91.515178, "o", "list));\r\n\tlistCreate(lista2);\r\n\t\r\n\tfor(int i=0; i<20;i++){ //tylko 20 elementow dla czytelnosci\t\r\n\t\taddend(lista2, rand()%10000);\r\n\t}\r\n\t\r\n\tlist* lista3 = malloc(sizeof(list));\r\n\tlistCreate(lista3);\r\n\t\r\n\tfor(int i=0; i<20;i++){\r\n\t\taddend(lista3, rand()%10000);\r\n\t}\r\n\tprintf(\"Elementy listy2: \\n\");\r\n\tshowList(lista2);\r\n\tprintf(\"Elementy listy3: \\n\");\r\n\tshowList(lista3);\r\n\t\r\n\tmerge(lista2, lista3);\r\n\tprintf(\"Po połączeniu: \\n\");\r\n\tshowList(lista2);\r\n\treturn 0;\r\n}\r\n\u001b]0;weronika@wera-VirtualBox: ~/Pulpit/aisd/Lista1\u0007\u001b[01;32mweronika@wera-VirtualBox\u001b[00m:\u001b[01;34m~/Pulpit/aisd/Lista1\u001b[00m$ "]
[93.515202, "o", "cat zad2.c"]
[93.697172, "o", "\b\b\b\b\b\b\b\b\b\b\u001b[4P# Zad2"]
[94.241144, "o", "\b\b\b\b\b\b./a.out"]
[94.569252, "o", "\b\b\b\b\b\b\bcat zad1lifo.c"]
[95.111307, "o", "\b"]
[95.281271, "o", "\b"]
[95.876307, "o", "\b\u001b[1P.c\b\b"]
[96.018204, "o", "\b\u001b[1P.c\b\b"]
[96.164362, "o", "\b\u001b[1P.c\b\b"]
[96.300089, "o", "\b\u001b[1P.c\b\b"]
[96.470614, "o", "\b\u001b[1P.c\b\b"]
[96.676295, "o", "2.c\b\b"]
[97.050216, "o", "\r\n"]
[97.051121, "o", "//lista jednokierunkowa\r\n#include <stdio.h>\r\n#include <stdlib.h> \r\n#include <time.h>\r\n\r\ntypedef struct Note{\r\n\tint head;\r\n\tstruct Note* tail;\r\n} note;\r\n\r\ntypedef struct List{\t//struktura, żeby można stworzyc kilka list\r\n\tnote* first;\r\n} list;\r\n\r\n\r\nvoid listCreate(list* lista){\r\n\tlista->first = NULL;\r\n}\r\n\r\n//dodaje na poczatek istniejacej listy\r\nvoid addstart(list* a, int newpart){\r\n\tnote* end = malloc(sizeof(struct Note));\r\n\t\r\n\tend->head = newpart;\r\n\tend->tail = a->first;\r\n\t\r\n\ta->first = end;\r\n\t\r\n\t//printf(\"Dodano na poczatek listy: %d \\n\", a->first->head);\r\n}\r\n\r\n//dodaje element na koniec listy\r\nvoid addend(list* a, int newpart){\r\n\tnote* end = malloc(sizeof(note));\r\n\t\r\n\tend->head = newpart;\r\n\tend->tail = NULL;\r\n\t\r\n\t//pusta lista\r\n\tif(a->first == NULL){\r\n\t\ta->first = end;\r\n\t}\r\n\telse{\r\n\t\tnote* tmp = a->first;\r\n\t\twhile(tmp->tail != NULL){\r\n\t\t\ttmp = tmp->tail;\r\n\t\t}\r\n\t\r\n\t\ttmp->tail = end;\r\n\t}\r\n\t//printf(\"Dodano na koniec listy: %d \\n\", end->head);\r\n}\r\n\r\n//wyswietla wszystkie elementy listy\r\nvoid showList(list* "]
[97.05117, "o", "a){\r\n\tif(a->first == NULL){\r\n\t\tprintf(\"Nie ma nic\");\r\n\t}\r\n\telse{\r\n\t\tnote* tmp = a->first;\r\n\t\tprintf(\"%d \", tmp->head);\r\n\t\twhile(tmp->tail != NULL) {\r\n\t\t\ttmp = tmp->tail;\r\n\t\t\tprintf(\"%d \", tmp->head);\r\n\t\t}\r\n\t}\r\n\tprintf(\"\\n\");\r\n}\r\n\r\n//usuwa ostatni element listy\r\nvoid del(list* all){\t\r\n\tnote* tmp = all->first;\r\n\t\t\r\n\tif(tmp == NULL){\r\n\t\tprintf(\"Pusto, nie można nic usunąć \\n\");\r\n\t\treturn;\r\n\t}\r\n\t//jesli jest to ostatni element\r\n\tif(tmp->tail == NULL){\r\n\t\tall->first = NULL;\r\n\t\t//printf(\"Usunieto: %d \\n\", tmp->head);\r\n\t}\r\n\telse{\r\n\t\t//szukanie przed ostatniego\r\n\t\twhile(tmp->tail->tail != NULL){\r\n\t\t\ttmp = tmp->tail;\r\n\t\t}\r\n\r\n\t\t//printf(\"Usunieto: %d \\n\", tmp->tail->head);\r\n\t\ttmp->tail = NULL;\r\n\t}\r\n}\r\n\r\n//łączy dwie listy\r\nvoid merge(list* l1, list* l2){\r\n\tnote* tmp = l1->first;\r\n\twhile(tmp->tail != NULL){\r\n\t\ttmp = tmp->tail;\r\n\t}\r\n\t\r\n\ttmp->tail = l2->first;\r\n\t\r\n\tprintf(\"Połączono listy \\n\");\r\n}\r\n\r\n//sprawdza sredni czas dostepu do podanego elemntu\r\nvoid averageTime(list* lista , int position){\r\n\tclock_t start, e"]
[97.05119, "o", "nd; //przechowuje liczbe cykli zegara;\r\n\tdouble execution_time = 0;\r\n\r\n\tfor(int j=0; j<100;j++){\r\n\t\tstart = clock(); //czas rozpoczecia\r\n\t\t\r\n\t\tnote* tmp = lista->first;\r\n\t\t//szuka elementu\r\n\t\tfor(int i=0; i< position;i++){\r\n\t\t\tif(tmp->tail == NULL){\r\n\t\t\t\tprintf(\"Koniec listy\");\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\ttmp = tmp->tail;\r\n\t\t}\r\n\t\t\r\n\t\tend = clock(); //czas zakonczenia\r\n\t\texecution_time += ((double)(end - start))/CLOCKS_PER_SEC;\r\n\t}\r\n\tprintf(\"Dla elementu %d: %f \\n\", position, execution_time/100);\r\n}\r\n\r\nint main() {\r\n\t//do losowosci\r\n\ttime_t ti;\r\n\tsrand((unsigned) time (&ti));\r\n\t\r\n\t//deklaracja listy\r\n\tlist* lista1 = malloc(sizeof(list));\r\n\tlistCreate(lista1);\r\n\t//wypelnienie listy losowymi liczbami (dla czytelnosci mniejszymi od 10000)\r\n\tfor(int i=0; i<10000;i++){\r\n\t\taddend(lista1, rand()%10000);\r\n\t}\r\n\t\r\n\tprintf(\"\\nSprawdzanie średniego czasu\\n\");\r\n\t\r\n\taverageTime(lista1, 100);\r\n\taverageTime(lista1, 9999);\r\n\taverageTime(lista1, rand()%10000);\r\n\t\r\n\tprintf(\"\\nSpawdzanie merge \\n\");\r\n\t\r\n\tlist* lista2 = malloc(sizeof("]
[97.051207, "o", "list));\r\n\tlistCreate(lista2);\r\n\t\r\n\tfor(int i=0; i<20;i++){ //tylko 20 elementow dla czytelnosci\t\r\n\t\taddend(lista2, rand()%10000);\r\n\t}\r\n\t\r\n\tlist* lista3 = malloc(sizeof(list));\r\n\tlistCreate(lista3);\r\n\t\r\n\tfor(int i=0; i<20;i++){\r\n\t\taddend(lista3, rand()%10000);\r\n\t}\r\n\tprintf(\"Elementy listy2: \\n\");\r\n\tshowList(lista2);\r\n\tprintf(\"Elementy listy3: \\n\");\r\n\tshowList(lista3);\r\n\t\r\n\tmerge(lista2, lista3);\r\n\tprintf(\"Po połączeniu: \\n\");\r\n\tshowList(lista2);\r\n\treturn 0;\r\n}\r\n"]
[97.051561, "o", "\u001b]0;weronika@wera-VirtualBox: ~/Pulpit/aisd/Lista1\u0007\u001b[01;32mweronika@wera-VirtualBox\u001b[00m:\u001b[01;34m~/Pulpit/aisd/Lista1\u001b[00m$ "]
[99.761163, "o", "cat zad2.c"]
[99.929368, "o", "\b\b\b\b\b\b\b\b\b\b\u001b[4P# Zad2"]
[100.387187, "o", "\b\b\b\b\b\b./a.out"]
[103.454009, "o", "\r\n"]
[103.454794, "o", "Dodano: 0 \r\nDodano: 1 \r\nDodano: 2 \r\nDodano: 3 \r\nDodano: 4 \r\nDodano: 5 \r\nDodano: 6 \r\nDodano: 7 \r\nDodano: 8 \r\nDodano: 9 \r\nDodano: 10 \r\nDodano: 11 \r\nDodano: 12 \r\nDodano: 13 \r\nDodano: 14 \r\nDodano: 15 \r\nDodano: 16 \r\nDodano: 17 \r\nDodano: 18 \r\nDodano: 19 \r\nDodano: 20 \r\nDodano: 21 \r\nDodano: 22 \r\nDodano: 23 \r\nDodano: 24 \r\nDodano: 25 \r\nDodano: 26 \r\nDodano: 27 \r\nDodano: 28 \r\n"]
[103.45483, "o", "Dodano: 29 \r\nDodano: 30 \r\nDodano: 31 \r\nDodano: 32 \r\nDodano: 33 \r\nDodano: 34 \r\nDodano: 35 \r\nDodano: 36 \r\nDodano: 37 \r\nDodano: 38 \r\nDodano: 39 \r\nDodano: 40 \r\nDodano: 41 \r\nDodano: 42 \r\nDodano: 43 \r\nDodano: 44 \r\nDodano: 45 \r\nDodano: 46 \r\nDodano: 47 \r\nDodano: 48 \r\nDodano: 49 \r\nDodano: 50 \r\nDodano: 51 \r\nDodano: 52 \r\nDodano: 53 \r\nDodano: 54 \r\nDodano: 55 \r\nDodano: 56 \r\nDodano: 57 \r\nDodano: 58 \r\nDodano: 59 \r\nDodano: 60 \r\nDodano: 61 \r\nDodano: 62 \r\nDodano: 63 \r\nDodano: 64 \r\nDodano: 65 \r\nDodano: 66 \r\nDodano: 67 \r\nDodano: 68 \r\nDodano: 69 \r\nDodano: 70 \r\nDodano: 71 \r\nDodano: 72 \r\nDodano: 73 \r\nDodano: 74 \r\nDodano: 75 \r\nDodano: 76 \r\nDodano: 77 \r\n"]
[103.454839, "o", "Dodano: 78 \r\nDodano: 79 \r\nDodano: 80 \r\nDodano: 81 \r\nDodano: 82 \r\nDodano: 83 \r\n"]
[103.454847, "o", "Dodano: 84 \r\nDodano: 85 \r\nDodano: 86 \r\nDodano: 87 \r\nDodano: 88 \r\nDodano: 89 \r\nDodano: 90 \r\nDodano: 91 \r\nDodano: 92 \r\nDodano: 93 \r\nDodano: 94 \r\nDodano: 95 \r\nDodano: 96 \r\nDodano: 97 \r\nDodano: 98 \r\n"]
[103.454957, "o", "Dodano: 99 \r\nUsunieto: 99 \r\nUsunieto: 98 \r\nUsunieto: 97 \r\nUsunieto: 96 \r\nUsunieto: 95 \r\nUsunieto: 94 \r\nUsunieto: 93 \r\nUsunieto: 92 \r\nUsunieto: 91 \r\nUsunieto: 90 \r\nUsunieto: 89 \r\nUsunieto: 88 \r\nUsunieto: 87 \r\nUsunieto: 86 \r\nUsunieto: 85 \r\nUsunieto: 84 \r\nUsunieto: 83 \r\nUsunieto: 82 \r\nUsunieto: 81 \r\nUsunieto: 80 \r\nUsunieto: 79 \r\nUsunieto: 78 \r\nUsunieto: 77 \r\nUsunieto: 76 \r\nUsunieto: 75 \r\nUsunieto: 74 \r\nUsunieto: 73 \r\nUsunieto: 72 \r\nUsunieto: 71 \r\nUsunieto: 70 \r\nUsunieto: 69 \r\nUsunieto: 68 \r\nUsunieto: 67 \r\nUsunieto: 66 \r\nUsunieto: 65 \r\nUsunieto: 64 \r\nUsunieto: 63 \r\nUsunieto: 62 \r\nUsunieto: 61 \r\nUsunieto: 60 \r\nUsunieto: 59 \r\nUsunieto: 58 \r\nUsunieto: 57 \r\nUsunieto: 56 \r\nUsunieto: 55 \r\nUsunieto: 54 \r\nUsunieto: 53 \r\nUsunieto: 52 \r\nUsunieto: 51 \r\nUsunieto: 50 \r\nUsunieto: 49 \r\nUsunieto: 48 \r\nUsunieto: 47 \r\nUsunieto: 46 \r\nUsunieto: 45 \r\nUsunieto: 44 \r\nUsunieto: 43 \r\nUsunieto: 42 \r\nUsunieto: 41 \r\nUsunieto: 40 \r\nUsunieto: 39 \r\nUsunieto: 38 \r\nUsunieto: 37 \r\nUsunieto: 36 \r\nUsunieto: 35 \r\nUsunieto: 34 \r\nUsunieto: 33 \r\nUsunie"]
[103.454981, "o", "to: 32 \r\nUsunieto: 31 \r\nUsunieto: 30 \r\nUsunieto: 29 \r\nUsunieto: 28 \r\nUsunieto: 27 \r\nUsunieto: 26 \r\nUsunieto: 25 \r\nUsunieto: 24 \r\nUsunieto: 23 \r\nUsunieto: 22 \r\nUsunieto: 21 \r\nUsunieto: 20 \r\nUsunieto: 19 \r\nUsunieto: 18 \r\nUsunieto: 17 \r\nUsunieto: 16 \r\nUsunieto: 15 \r\nUsunieto: 14 \r\nUsunieto: 13 \r\nUsunieto: 12 \r\nUsunieto: 11 \r\nUsunieto: 10 \r\nUsunieto: 9 \r\nUsunieto: 8 \r\nUsunieto: 7 \r\nUsunieto: 6 \r\nUsunieto: 5 \r\nUsunieto: 4 \r\nUsunieto: 3 \r\nUsunieto: 2 \r\nUsunieto: 1 \r\n"]
[103.45499, "o", "Usunieto: 0 \r\n"]
[103.45522, "o", "\u001b]0;weronika@wera-VirtualBox: ~/Pulpit/aisd/Lista1\u0007\u001b[01;32mweronika@wera-VirtualBox\u001b[00m:\u001b[01;34m~/Pulpit/aisd/Lista1\u001b[00m$ "]
[105.627314, "o", "./a.out"]
[105.93912, "o", "\b\b\b\b\b\b\bcat zad2.c"]
[106.169145, "o", "\b\b\b\b\b\b\b\b\b\b\u001b[4P# Zad2"]
[107.151022, "o", "\b\b\b\b\b\bcat zad2.c"]
[109.599923, "o", "\r\n"]
[109.60065, "o", "//lista jednokierunkowa\r\n#include <stdio.h>\r\n#include <stdlib.h> \r\n#include <time.h>\r\n\r\ntypedef struct Note{\r\n\tint head;\r\n\tstruct Note* tail;\r\n} note;\r\n\r\ntypedef struct List{\t//struktura, żeby można stworzyc kilka list\r\n\tnote* first;\r\n} list;\r\n\r\n\r\nvoid listCreate(list* lista){\r\n\tlista->first = NULL;\r\n}\r\n\r\n//dodaje na poczatek istniejacej listy\r\nvoid addstart(list* a, int newpart){\r\n\tnote* end = malloc(sizeof(struct Note));\r\n\t\r\n\tend->head = newpart;\r\n\tend->tail = a->first;\r\n\t\r\n\ta->first = end;\r\n\t\r\n\t//printf(\"Dodano na poczatek listy: %d \\n\", a->first->head);\r\n}\r\n\r\n//dodaje element na koniec listy\r\nvoid addend(list* a, int newpart){\r\n\tnote* end = malloc(sizeof(note));\r\n\t\r\n\tend->head = newpart;\r\n\tend->tail = NULL;\r\n\t\r\n\t//pusta lista\r\n\tif(a->first == NULL){\r\n\t\ta->first = end;\r\n\t}\r\n\telse{\r\n\t\tnote* tmp = a->first;\r\n\t\twhile(tmp->tail != NULL){\r\n\t\t\ttmp = tmp->tail;\r\n\t\t}\r\n\t\r\n\t\ttmp->tail = end;\r\n\t}\r\n\t//printf(\"Dodano na koniec listy: %d \\n\", end->head);\r\n}\r\n\r\n//wyswietla wszystkie elementy listy\r\nvoid showList(list* "]
[109.600695, "o", "a){\r\n\tif(a->first == NULL){\r\n\t\tprintf(\"Nie ma nic\");\r\n\t}\r\n\telse{\r\n\t\tnote* tmp = a->first;\r\n\t\tprintf(\"%d \", tmp->head);\r\n\t\twhile(tmp->tail != NULL) {\r\n\t\t\ttmp = tmp->tail;\r\n\t\t\tprintf(\"%d \", tmp->head);\r\n\t\t}\r\n\t}\r\n\tprintf(\"\\n\");\r\n}\r\n\r\n//usuwa ostatni element listy\r\nvoid del(list* all){\t\r\n\tnote* tmp = all->first;\r\n\t\t\r\n\tif(tmp == NULL){\r\n\t\tprintf(\"Pusto, nie można nic usunąć \\n\");\r\n\t\treturn;\r\n\t}\r\n\t//jesli jest to ostatni element\r\n\tif(tmp->tail == NULL){\r\n\t\tall->first = NULL;\r\n\t\t//printf(\"Usunieto: %d \\n\", tmp->head);\r\n\t}\r\n\telse{\r\n\t\t//szukanie przed ostatniego\r\n\t\twhile(tmp->tail->tail != NULL){\r\n\t\t\ttmp = tmp->tail;\r\n\t\t}\r\n\r\n\t\t//printf(\"Usunieto: %d \\n\", tmp->tail->head);\r\n\t\ttmp->tail = NULL;\r\n\t}\r\n}\r\n\r\n//łączy dwie listy\r\nvoid merge(list* l1, list* l2){\r\n\tnote* tmp = l1->first;\r\n\twhile(tmp->tail != NULL){\r\n\t\ttmp = tmp->tail;\r\n\t}\r\n\t\r\n\ttmp->tail = l2->first;\r\n\t\r\n\tprintf(\"Połączono listy \\n\");\r\n}\r\n\r\n//sprawdza sredni czas dostepu do podanego elemntu\r\nvoid averageTime(list* lista , int position){\r\n\tclock_t start, e"]
[109.600783, "o", "nd; //przechowuje liczbe cykli zegara;\r\n\tdouble execution_time = 0;\r\n\r\n\tfor(int j=0; j<100;j++){\r\n\t\tstart = clock(); //czas rozpoczecia\r\n\t\t\r\n\t\tnote* tmp = lista->first;\r\n\t\t//szuka elementu\r\n\t\tfor(int i=0; i< position;i++){\r\n\t\t\tif(tmp->tail == NULL){\r\n\t\t\t\tprintf(\"Koniec listy\");\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\ttmp = tmp->tail;\r\n\t\t}\r\n\t\t\r\n\t\tend = clock(); //czas zakonczenia\r\n\t\texecution_time += ((double)(end - start))/CLOCKS_PER_SEC;\r\n\t}\r\n\tprintf(\"Dla elementu %d: %f \\n\", position, execution_time/100);\r\n}\r\n\r\nint main() {\r\n\t//do losowosci\r\n\ttime_t ti;\r\n\tsrand((unsigned) time (&ti));\r\n\t\r\n\t//deklaracja listy\r\n\tlist* lista1 = malloc(sizeof(list));\r\n\tlistCreate(lista1);\r\n\t//wypelnienie listy losowymi liczbami (dla czytelnosci mniejszymi od 10000)\r\n\tfor(int i=0; i<10000;i++){\r\n\t\taddend(lista1, rand()%10000);\r\n\t}\r\n\t\r\n\tprintf(\"\\nSprawdzanie średniego czasu\\n\");\r\n\t\r\n\taverageTime(lista1, 100);\r\n\taverageTime(lista1, 9999);\r\n\taverageTime(lista1, rand()%10000);\r\n\t\r\n\tprintf(\"\\nSpawdzanie merge \\n\");\r\n\t\r\n\tlist* lista2 = malloc(sizeof("]
[109.600802, "o", "list));\r\n\tlistCreate(lista2);\r\n\t\r\n\tfor(int i=0; i<20;i++){ //tylko 20 elementow dla czytelnosci\t\r\n\t\taddend(lista2, rand()%10000);\r\n\t}\r\n\t\r\n\tlist* lista3 = malloc(sizeof(list));\r\n\tlistCreate(lista3);\r\n\t\r\n\tfor(int i=0; i<20;i++){\r\n\t\taddend(lista3, rand()%10000);\r\n\t}\r\n\tprintf(\"Elementy listy2: \\n\");\r\n\tshowList(lista2);\r\n\tprintf(\"Elementy listy3: \\n\");\r\n\tshowList(lista3);\r\n\t\r\n\tmerge(lista2, lista3);\r\n\tprintf(\"Po połączeniu: \\n\");\r\n\tshowList(lista2);\r\n\treturn 0;\r\n}\r\n"]
[109.600919, "o", "\u001b]0;weronika@wera-VirtualBox: ~/Pulpit/aisd/Lista1\u0007\u001b[01;32mweronika@wera-VirtualBox\u001b[00m:\u001b[01;34m~/Pulpit/aisd/Lista1\u001b[00m$ "]
[109.975384, "o", "cat zad2.c"]
[110.197082, "o", "\b\b\b\b\b\b\b\b\b\b\u001b[3P./a.out"]
[110.609025, "o", "\b\b\b\b\b\b\bcat zad2.c"]
[111.081146, "o", "\b\b\b\b\b\b\b\b\b\b\u001b[4P# Zad2"]
[111.477356, "o", "\b\b\b\b\b\b./a.out"]
[111.959313, "o", "\b\b\b\b\b\b\bcat zad1lifo.c"]
[112.609335, "o", "\b\b\b\b\b\b\b\b\b\b\b\b\b\u001b[2@lang\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C"]
[113.219281, "o", "\b"]
[113.383582, "o", "\b"]
[114.122257, "o", "\b\u001b[1P.c\b\b"]
[114.27014, "o", "\b\u001b[1P.c\b\b"]
[114.406103, "o", "\b\u001b[1P.c\b\b"]
[114.540134, "o", "\b\u001b[1P.c\b\b"]
[114.718374, "o", "\b\u001b[1P.c\b\b"]
[114.93241, "o", "2.c\b\b"]
[115.315917, "o", "\r\n"]
[115.370945, "o", "\u001b]0;weronika@wera-VirtualBox: ~/Pulpit/aisd/Lista1\u0007\u001b[01;32mweronika@wera-VirtualBox\u001b[00m:\u001b[01;34m~/Pulpit/aisd/Lista1\u001b[00m$ "]
[115.871161, "o", "clang zad2.c"]
[116.04731, "o", "\b\b\b\b\b\b\b\b\b\b\b\u001b[2Pat\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C"]
[116.207211, "o", "\b\b\b\b\b\b\b\b\b\b\u001b[3P./a.out"]
[116.671415, "o", "\b\b\b\b\b\b\bcat zad2.c"]
[117.123303, "o", "\b\b\b\b\b\b\b\b\b\b\u001b[4P# Zad2"]
[118.137175, "o", "\b\b\b\b\b\b./a.out"]
[119.030268, "o", "\r\n"]
[119.084239, "o", "\r\nSprawdzanie średniego czasu\r\n"]
[119.084298, "o", "Dla elementu 100: 0.000001 \r\n"]
[119.087589, "o", "Dla elementu 9999: 0.000033 \r\n"]
[119.088927, "o", "Dla elementu 3885: 0.000013 \r\n\r\nSpawdzanie merge \r\nElementy listy2: \r\n4792 8026 9771 2932 4324 1987 824 2062 2730 6885 127 5554 5883 5370 3655 7050 6959 9074 4333 7594 \r\nElementy listy3: \r\n5514 9208 9813 7848 8814 7432 2956 8297 8409 9501 2182 9553 3879 1953 2485 4555 3940 9662 6617 3023 \r\nPołączono listy \r\nPo połączeniu: \r\n4792 8026 9771 2932 4324 1987 824 2062 2730 6885 127 5554 5883 5370 3655 7050 6959 9074 4333 7594 5514 9208 9813 7848 8814 7432 2956 8297 8409 9501 2182 9553 3879 1953 2485 4555 3940 9662 6617 3023 \r\n"]
[119.089188, "o", "\u001b]0;weronika@wera-VirtualBox: ~/Pulpit/aisd/Lista1\u0007\u001b[01;32mweronika@wera-VirtualBox\u001b[00m:\u001b[01;34m~/Pulpit/aisd/Lista1\u001b[00m$ "]
[121.723232, "o", "./a.out"]
[122.011223, "o", "\b\b\b\b\b\b\bclang zad2.c"]
[122.32743, "o", "\b\b\b\b\b\b\b\b\b\b\b\u001b[2Pat\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C"]
[122.719001, "o", "\b\b\b\b\b\b\b\b\b\b\u001b[3P./a.out"]
[123.118941, "o", "\b\b\b\b\b\b\bcat zad2.c"]
[123.535137, "o", "\b\b\b\b\b\b\b\b\b\b\u001b[4P# Zad2"]
[124.800085, "o", "\b\u001b[K"]
[125.404014, "o", "3"]
[126.892039, "o", "\r\n"]
[126.892194, "o", "\u001b]0;weronika@wera-VirtualBox: ~/Pulpit/aisd/Lista1\u0007\u001b[01;32mweronika@wera-VirtualBox\u001b[00m:\u001b[01;34m~/Pulpit/aisd/Lista1\u001b[00m$ "]
[127.641166, "o", "# Zad3"]
[127.795528, "o", "\b\b\b\b\b\b./a.out"]
[130.127064, "o", "\b\b\b\b\b\b\bclang zad2.c"]
[131.367148, "o", "\b\b\b\b\b\b\b\b\b\b\b\u001b[2Pat\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C"]
[131.935252, "o", "\b"]
[132.107022, "o", "\b"]
[132.732065, "o", "\b\u001b[1P.c\b\b"]
[132.914148, "o", "3.c\b\b"]
[133.322228, "o", "\r\n"]
[133.322973, "o", "//lista dwukierunkowa cykliczna + merge\r\n#include <stdio.h>\r\n#include <stdlib.h> \r\n#include <time.h>\r\n\r\ntypedef struct Note{\r\n\tint head;\r\n\tstruct Note* past;\r\n\tstruct Note* next;\r\n} note;\r\n\r\ntypedef struct List{\t//struktura, żeby można stworzyc kilka list\r\n\tnote* point;\r\n} list;\r\n\r\n\r\nvoid listCreate(list* lista){\r\n\tlista->point = NULL;\r\n}\r\n\r\n//dodaje element na koniec listy\r\nvoid add(list* lista, int newpart){\r\n\tnote* item = malloc(sizeof(note));\r\n\t\r\n\titem->head = newpart;\r\n\t\r\n\t//pusta lista\r\n\tif(lista->point == NULL){\r\n\t\tlista->point = item;\r\n\t\titem->next = item;\r\n\t\titem->past = item;\r\n\t}\r\n\telse{ //ma zawartosc\r\n\t\titem->next = lista->point;\r\n\t\titem->past = lista->point->past; \r\n\t\t//lista->point->prev punkt ktory byl prev do pointa, chcemy byc jego next\r\n\t\tlista->point->past->next = item;\r\n\t\tlista->point->past = item;\r\n\t}\r\n\t//printf(\"Dodano na koniec listy: %d \\n\", end->head);\r\n}\r\n\r\n\r\n//wyswietla wszystkie elementy listy\r\nvoid showList(list* a){\r\n\tnote* tmp = a->point;\r\n\tif(tmp == NULL){\r\n\t\tprintf(\"Nie ma n"]
[133.323097, "o", "ic\");\r\n\t}\r\n\telse{\r\n\t\tprintf(\"%d \", tmp->head);\r\n\t\twhile(tmp->next != a->point) {\r\n\t\t\ttmp = tmp->next;\r\n\t\t\tprintf(\"%d \", tmp->head);\r\n\t\t}\r\n\t}\r\n\tprintf(\"\\n\");\r\n}\r\n\r\n//laczy dwie listy\r\nvoid merge(list* l1, list* l2){\r\n\tnote* point1 = l1->point; //dla czytelnosci\r\n\tnote* point2 = l2->point;\r\n\tnote* temp = point1->past;\r\n\r\n\tpoint1->past->next = point2; //ten przed point1, laczymy z point2\r\n\tpoint1->past = point2->past;\r\n\tpoint2->past->next = point1;\r\n\tpoint2->past = temp;\r\n\t\r\n\tprintf(\"Połączono listy \\n\");\r\n}\r\n\r\nvoid averageTime(list* lista , int position){\r\n\tclock_t start, end; //przechowuje liczbe cykli zegara;\r\n\tdouble execution_time = 0;\r\n\r\n\tfor(int j=0; j<100;j++){\r\n\t\tstart = clock(); //czas rozpoczecia\r\n\t\t\r\n\t\tnote* tmp = lista->point;\r\n\t\t//szuka elementu\r\n\t\tfor(int i=0; i< position;i++){\r\n\t\t\tif(tmp->next == lista->point){\r\n\t\t\t\tprintf(\"Przeszedł wszystkie\");\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\ttmp = tmp->next;\r\n\t\t}\r\n\t\t\r\n\t\tend = clock(); //czas zakonczenia\r\n\t\texecution_time += ((double)(end - start))/CLOCKS_PER_SEC;\r\n\t"]
[133.323125, "o", "}\r\n\tprintf(\"Dla elementu %d: %f \\n\", position, execution_time/100);\r\n}\r\n\r\n\r\nint main(){\r\n\t//do losowosci\r\n\ttime_t ti;\r\n\tsrand((unsigned) time (&ti));\r\n\t\r\n\tlist* lista1 = malloc(sizeof(list));\r\n\tlistCreate(lista1);\r\n\t//wypelnienie listy losowymi liczbami (dla czytelnosci mniejszymi od 10000)\r\n\tfor(int i=0; i<10000;i++){\r\n\r\n\t\tadd(lista1, rand()%10000);\r\n\t}\r\n\t//showList(lista1);\r\n\t\r\n\r\n\tprintf(\"\\n\\n\\nSprawdzanie średniego czasu\\n\");\r\n\t\r\n\taverageTime(lista1, 100);\r\n\taverageTime(lista1, 9999);\r\n\taverageTime(lista1, rand()%10000); \r\n\t\r\n\tprintf(\"\\n\\n\\nSpawdzanie merge \\n\");\r\n\t\r\n\tlist* lista2 = malloc(sizeof(list));\r\n\tlistCreate(lista2);\r\n\t\r\n\tfor(int i=0; i<20;i++){\t\r\n\t\tadd(lista2, rand()%10000);\r\n\t}\r\n\t\r\n\tlist* lista3 = malloc(sizeof(list));\r\n\tlistCreate(lista3);\r\n\t\r\n\tfor(int i=0; i<20;i++){\t\r\n\t\tadd(lista3, rand()%10000);\r\n\t}\r\n\tprintf(\"Elementy listy2: \\n\");\r\n\tshowList(lista2);\r\n\tprintf(\"Elementy listy3: \\n\");\r\n\tshowList(lista3);\r\n\t\r\n\tmerge(lista2, lista3);\r\n\tprintf(\"Po połączeniu: \\n\");\r\n\tshowList(lista2);\r\n\tretur"]
[133.32316, "o", "n 0;\r\n}\r\n"]
[133.323227, "o", "\u001b]0;weronika@wera-VirtualBox: ~/Pulpit/aisd/Lista1\u0007\u001b[01;32mweronika@wera-VirtualBox\u001b[00m:\u001b[01;34m~/Pulpit/aisd/Lista1\u001b[00m$ "]
[133.994964, "o", "cat zad3.c"]
[134.178999, "o", "\b\b\b\b\b\b\b\b\b\b\u001b[4P# Zad3"]
[135.235069, "o", "\b\b\b\b\b\b./a.out"]
[135.835054, "o", "\b\b\b\b\b\b\bclang zad2.c"]
[138.699328, "o", "\b"]
[138.862933, "o", "\b"]
[139.480191, "o", "\b\u001b[1P.c\b\b"]
[139.738053, "o", "3.c\b\b"]
[140.490287, "o", "\r\n"]
[140.545907, "o", "\u001b]0;weronika@wera-VirtualBox: ~/Pulpit/aisd/Lista1\u0007\u001b[01;32mweronika@wera-VirtualBox\u001b[00m:\u001b[01;34m~/Pulpit/aisd/Lista1\u001b[00m$ "]
[140.911224, "o", "clang zad3.c"]
[141.063242, "o", "\b\b\b\b\b\b\b\b\b\b\b\u001b[2Pat\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C"]
[141.538999, "o", "\b\b\b\b\b\b\b\b\b\b\u001b[4P# Zad3"]
[142.003303, "o", "\b\b\b\b\b\b./a.out"]
[142.912215, "o", "\r\n"]
[142.913644, "o", "\r\n\r\n\r\nSprawdzanie średniego czasu\r\n"]
[142.913701, "o", "Dla elementu 100: 0.000001 \r\n"]
[142.917932, "o", "Dla elementu 9999: 0.000042 \r\n"]
[142.919246, "o", "Dla elementu 3156: 0.000013 \r\n\r\n\r\n\r\nSpawdzanie merge \r\nElementy listy2: \r\n2724 4429 3004 5484 7847 762 9838 7822 6885 5281 4422 3061 8904 5200 1020 4030 1231 4216 4924 3124 \r\nElementy listy3: \r\n7155 6506 4947 2213 4791 9593 858 4554 4606 3127 7710 7330 3908 7066 2815 1755 7828 9005 5929 1066 \r\nPołączono listy \r\nPo połączeniu: \r\n2724 4429 3004 5484 7847 762 9838 7822 6885 5281 4422 3061 8904 5200 1020 4030 1231 4216 4924 3124 7155 6506 4947 2213 4791 9593 858 4554 4606 3127 7710 7330 3908 7066 2815 1755 7828 9005 5929 1066 \r\n"]
[142.919519, "o", "\u001b]0;weronika@wera-VirtualBox: ~/Pulpit/aisd/Lista1\u0007\u001b[01;32mweronika@wera-VirtualBox\u001b[00m:\u001b[01;34m~/Pulpit/aisd/Lista1\u001b[00m$ "]
[153.566051, "o", "#"]
[154.1441, "o", "k"]
[154.248206, "o", "o"]
[154.456187, "o", "n"]
[154.9561, "o", "i"]
[155.076093, "o", "e"]
[155.286036, "o", "c"]
[155.900779, "o", " "]
[156.194015, "o", "n"]
[156.304038, "o", "a"]
[156.51221, "o", "g"]
[156.682076, "o", "r"]
[156.785918, "o", "a"]
[156.938107, "o", "n"]
[157.052222, "o", "i"]
[157.131908, "o", "a"]
[157.279926, "o", "\r\n"]
[157.280133, "o", "\u001b]0;weronika@wera-VirtualBox: ~/Pulpit/aisd/Lista1\u0007\u001b[01;32mweronika@wera-VirtualBox\u001b[00m:\u001b[01;34m~/Pulpit/aisd/Lista1\u001b[00m$ "]
[158.740243, "o", "e"]
[158.976179, "o", "x"]
[159.104191, "o", "i"]
[159.250114, "o", "t"]
[159.960066, "o", "\r\n"]
[159.960388, "o", "exit\r\n"]
